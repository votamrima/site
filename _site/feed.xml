<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/site/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/site/" rel="alternate" type="text/html" /><updated>2022-05-18T16:31:14+02:00</updated><id>http://localhost:4000/site/feed.xml</id><title type="html">notes</title><subtitle>.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><entry><title type="html">Private container registry on podman</title><link href="http://localhost:4000/site/private-container-registry/" rel="alternate" type="text/html" title="Private container registry on podman" /><published>2022-03-28T21:00:00+02:00</published><updated>2022-03-28T21:00:00+02:00</updated><id>http://localhost:4000/site/private-container-registry</id><content type="html" xml:base="http://localhost:4000/site/private-container-registry/">&lt;p&gt;It is very easy to set up a simple container registry on podman. Here below I show how to set up a local simple container registry for personal use.&lt;/p&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;If podman and htpasswd packages are not installed on the host, install them:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dnf provides htpasswd
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;admin: 
Last metadata expiration check: 1:10:40 ago on Mon 11 Apr 2022 06:12:44 PM CEST.
httpd-tools-2.4.37-30.module_el8.3.0+462+ba287492.0.1.x86_64 : Tools &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;use with the Apache HTTP Server
Repo        : appstream
Matched from:
Filename    : /usr/bin/htpasswd

httpd-tools-2.4.37-39.module_el8.4.0+778+c970deab.x86_64 : Tools &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;use with the Apache HTTP Server
Repo        : appstream
Matched from:
Filename    : /usr/bin/htpasswd

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;httpd-tools podman
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create a file with credentials:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;htpasswd &lt;span class=&quot;nt&quot;&gt;-bc&lt;/span&gt; auth admin admin
Adding password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user admin
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;auth 
admin:&lt;span class=&quot;nv&quot;&gt;$apr1$OQzj4eaY$ipt3p40Vipneb2PTn1W7e0&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Define local folders that will be mounted to registry container. I am going to mount 2 folders: one for data, another one for credentials file. For data will be used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/registry/volume&lt;/code&gt; and for credentials - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/registry/auth&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create TLS certificate:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl req &lt;span class=&quot;nt&quot;&gt;-newkey&lt;/span&gt; rsa:4096 &lt;span class=&quot;nt&quot;&gt;-nodes&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sha256&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-keyout&lt;/span&gt; /opt/registry/tls/domain.key &lt;span class=&quot;nt&quot;&gt;-x509&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-days&lt;/span&gt; 365 &lt;span class=&quot;nt&quot;&gt;-subj&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/CN=registry.ocp.home.lab&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-addext&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;subjectAltName = DNS:registry.ocp.home.lab&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; /opt/registry/tls/domain.crt
Generating a RSA private key
..............................++++
................................................................................................................................................................................................................................................................++++
writing new private key to &lt;span class=&quot;s1&quot;&gt;'/opt/registry/tls/domain.key'&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The initialized certificate should be trusted. In Red Hat family system you need to copy the created certificate to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/pki/ca-trust/source/anchors/&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp &lt;/span&gt;domain.crt /etc/pki/ca-trust/source/anchors/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-ca-trust
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;trust list | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;registry
    label: registry.ocp.home.lab
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-container&quot;&gt;Run container&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; registry &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 5000:5000 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /opt/registry/volume:/var/lib/registry &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /opt/registry/auth:/opt/auth &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;REGISTRY_AUTH=htpasswd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;REGISTRY_AUTH_HTPASSWD_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/auth/auth &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /opt/registry/tls:/certs &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;REGISTRY_HTTP_TLS_KEY=/certs/domain.key&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; docker.io/library/registry:latest
773638fc8df066bcba844ad13189ebfbc09f14439391e68729aaf3f01e161ff2
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID  IMAGE                              COMMAND               CREATED        STATUS                   PORTS                   NAMES
773638fc8df0  docker.io/library/registry:latest  /etc/docker/regis...  3 seconds ago  Up 3 seconds ago         0.0.0.0:5000-&amp;gt;5000/tcp  registry
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Set correct SELinux context For the mounted volumes (/opt/registry/volume and /opt/registry/auth). Or disable SELinux.&lt;/li&gt;
  &lt;li&gt;Open port 5000 in firewall. Or disable the local firewall.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;log-inout-to-registry&quot;&gt;Log in/out to registry&lt;/h2&gt;

&lt;p&gt;And now let’s try to log in to the registry:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman &lt;span class=&quot;nb&quot;&gt;logout&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
Removed login credentials &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;all registries
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And try log out:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman tls]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman &lt;span class=&quot;nb&quot;&gt;logout &lt;/span&gt;registry.ocp.home.lab:5000
Removed login credentials &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;registry.ocp.home.lab:5000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After successfull login, podman stores credentials file in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/run/user/1000/containers/auth.json&lt;/code&gt;. Here, I just copied that file and will use for future login:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman &lt;span class=&quot;nb&quot;&gt;logout &lt;/span&gt;registry.ocp.home.lab:5000
Removed login credentials &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;registry.ocp.home.lab:5000
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /run/user/1000/containers/auth.json &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman login registry.ocp.home.lab:5000 &lt;span class=&quot;nt&quot;&gt;--authfile&lt;/span&gt; auth.json 
Authenticating with existing credentials &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;registry.ocp.home.lab:5000
Existing credentials are valid. Already logged &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;to registry.ocp.home.lab:5000
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pull-and-push-container&quot;&gt;Pull and push container&lt;/h2&gt;

&lt;p&gt;Let’s try to pull an image to the registry:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman images
REPOSITORY                                 TAG         IMAGE ID      CREATED      SIZE
localhost/newsbase                         latest      f8e04e34b36d  5 days ago   1.04 GB

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am going to push the image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;newsbase&lt;/code&gt; from localhost. First of all, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;podman tag&lt;/code&gt; to tag the image for the registry.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman tag newsbase registry.ocp.home.lab:5000/newsbase:1.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman images
REPOSITORY                                 TAG         IMAGE ID      CREATED      SIZE
localhost/newsbase                         latest      f8e04e34b36d  5 days ago   1.04 GB
registry.ocp.home.lab:5000/newsbase        1.0         f8e04e34b36d  5 days ago   1.04 GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then push it to the registry:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman push registry.ocp.home.lab:5000/newsbase:1.0
Getting image &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;signatures
Copying blob 1edf512cf84d &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;  
......
Copying config f8e04e34b3 &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;Writing manifest to image destination
Storing signatures
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Remove newsbase image from the local images list and pull that from the registry back:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman pull registry.ocp.home.lab:5000/newsbase:1.0
Trying to pull registry.ocp.home.lab:5000/newsbase:1.0...
Getting image &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;signatures
........
Copying blob 9a6655d6eaed &lt;span class=&quot;k&quot;&gt;done  
&lt;/span&gt;Copying config f8e04e34b3 &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;  
.........
Writing manifest to image destination
Storing signatures
f8e04e34b36dddd6de5d4e5cd02051385b10ff6a66e847a3ab989d3f5565ccda
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman auth]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman images
REPOSITORY                                 TAG         IMAGE ID      CREATED      SIZE
registry.ocp.home.lab:5000/newsbase        1.0         f8e04e34b36d  5 days ago   1.04 GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.redhat.com/sysadmin/simple-container-registry&quot;&gt;How to implement a simple personal/private Linux container image registry for internal use&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="podman" /><category term="container" /><summary type="html">It is very easy to set up a simple container registry on podman. Here below I show how to set up a local simple container registry for personal use.</summary></entry><entry><title type="html">Stop and start Openshift 4 cluster</title><link href="http://localhost:4000/site/openshift49-gracefull-restart/" rel="alternate" type="text/html" title="Stop and start Openshift 4 cluster" /><published>2022-02-10T20:00:00+01:00</published><updated>2022-02-10T20:00:00+01:00</updated><id>http://localhost:4000/site/openshift49-gracefull-restart</id><content type="html" xml:base="http://localhost:4000/site/openshift49-gracefull-restart/">&lt;p&gt;In this post I describe shortly how to shutdown and start up Openshift cluster.&lt;/p&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;Check if all nodes are properly running:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;oc get nodes &lt;span class=&quot;nt&quot;&gt;--show-labels&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check if all pods in all projects are working properly. Save the current state:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;oc get pods &lt;span class=&quot;nt&quot;&gt;--all-namespaces&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additionally, you can create backup of namespaces. See &lt;a href=&quot;https://velero.io&quot;&gt;velero&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;shutdown-cluster&quot;&gt;Shutdown cluster:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Gracefully shutdown all worker nodes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shutdown -h now&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gracefully shutdown Infra nodes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shutdown -h now&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gracefully shutdown all masters: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shutdown -h now&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;start-cluster&quot;&gt;Start cluster:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Start master nodes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Start infra nodes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Start worker node.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Check if nodes are started: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oc get nodes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check if pods are working: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oc get pods --all-namespaces&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.redhat.com/en/blog/how-stop-and-start-production-openshift-cluster&quot;&gt;How To: Stop and start a production OpenShift Cluster&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="openshift" /><summary type="html">In this post I describe shortly how to shutdown and start up Openshift cluster.</summary></entry><entry><title type="html">My experience of Openshift 4.9 installation on Proxmox with a restricted network</title><link href="http://localhost:4000/site/installing-openshift4.9/" rel="alternate" type="text/html" title="My experience of Openshift 4.9 installation on Proxmox with a restricted network" /><published>2022-01-15T20:00:00+01:00</published><updated>2022-01-15T20:00:00+01:00</updated><id>http://localhost:4000/site/installing-openshift4.9</id><content type="html" xml:base="http://localhost:4000/site/installing-openshift4.9/">&lt;p&gt;In this post I tried to describe my experience that I had during Openshift 4.9 installation at my home lab. Redhat allows to use Openshift during 60 days for free without support.&lt;/p&gt;

&lt;h2 id=&quot;preparing-environment&quot;&gt;Preparing environment&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Set up DNS and DHCP&lt;/li&gt;
  &lt;li&gt;Set up proxy&lt;/li&gt;
  &lt;li&gt;Download RHCOS (https://console.redhat.com/openshift/install/metal/user-provisioned)&lt;/li&gt;
  &lt;li&gt;Create bare metal environment. In my case I use Proxmox virtualization platform&lt;/li&gt;
  &lt;li&gt;Install http server&lt;/li&gt;
  &lt;li&gt;Install haproxy&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;preparing-for-installation&quot;&gt;Preparing for installation&lt;/h2&gt;
&lt;p&gt;For Openshift installation it is necessary to have following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;DNS and DHCP services&lt;/li&gt;
  &lt;li&gt;HTTP server. In my case I installed httpd server&lt;/li&gt;
  &lt;li&gt;Loadbalacer. I use Haproxy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these services are running on Linux machine (in my case it is last version of CentOS 8). I named it ocp-services.&lt;/p&gt;

&lt;p&gt;For installation and configuration of mentioned services I used ansible. Roles are available here: https://github.com/votamrima/ansible_activity&lt;/p&gt;

&lt;p&gt;At my home lab Openshift nodes are being run on Proxmox virtualisation platform. There are 6 nodes: 1 - bootstrap node, 3 master nodes, 2 worker nodes.&lt;/p&gt;

&lt;h3 id=&quot;obtaining-openshift-installer-and-token&quot;&gt;Obtaining Openshift installer and token&lt;/h3&gt;
&lt;p&gt;Register at Red Hat portal.&lt;/p&gt;

&lt;p&gt;Installer, token and Redhat CoreOS are able to download from https://console.redhat.com/openshift/install/metal/user-provisioned.&lt;/p&gt;

&lt;p&gt;Unpack downloanded zip into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/bin/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create a folder where will be generated igns. In my case it is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/try/install_dir/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;install-config.yaml&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/try/install_dir/&lt;/code&gt;. Sample for install-config.yaml is able to find here: https://docs.openshift.com/container-platform/4.9/installing/installing_bare_metal/installing-restricted-networks-bare-metal.html#installation-bare-metal-config-yaml_installing-restricted-networks-bare-metal.&lt;/p&gt;

&lt;p&gt;Edit created file. Add copied from Redhat portal token into the file.&lt;/p&gt;

&lt;p&gt;Create manifests:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openshift-install create manifests &lt;span class=&quot;nt&quot;&gt;--dir&lt;/span&gt; /opt/try/install_dir/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Modify the created cluster-scheduler-02-config.yml manifest file to make the control plane nodes schedulable by updating &lt;em&gt;mastersSchedulable&lt;/em&gt; value to true. This option will deactivate scheduling control plane nodes by default:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/mastersSchedulable: true/mastersSchedulable: false/'&lt;/span&gt; /opt/try/install_dir/manifests/cluster-scheduler-02-config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create ignition files:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openshift-install create ignition-configs &lt;span class=&quot;nt&quot;&gt;--dir&lt;/span&gt; /opt/try/install_dir/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy created ignition files to apache httpd folder. In my case it is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/www/html/okd/&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Rf&lt;/span&gt; install_dir/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; /var/www/html/okd/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;install-coreos-and-openshift&quot;&gt;Install CoreOS and Openshift&lt;/h3&gt;

&lt;p&gt;Create virtual machines on your virtual platform. Each node will run on seperated VM. In my case, as I mentioned above I used Proxmox and I have created 6 virtual machines - 1 bootstrap node, 3 for master nodes, 2 for worker nodes. All machines have following parameters: CPU - 4 core, memory - 16GB, hard drive - 100 GB, one phisycal network interface.&lt;/p&gt;

&lt;p&gt;Start each machine and load up the downloaded RHCOS iso image.&lt;/p&gt;

&lt;p&gt;When RHCOS is loaded you should install ign file that you have created before. Type following commands for the following machines accordingly. The structure of the command is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo coreos-installer install --ignition-url=&amp;lt;url with ignition file&amp;gt; &amp;lt;partition for installation&amp;gt; --insecure-ignition&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In my case I used following commands for installing a bootstrap node:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coreos-installer &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ignition-url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.11.61:8080/okd/bootstrap.ign /dev/sda &lt;span class=&quot;nt&quot;&gt;--insecure-ignition&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For installing master node:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coreos-installer &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ignition-url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.11.61:8080/okd/master.ign /dev/sda &lt;span class=&quot;nt&quot;&gt;--insecure-ignition&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For installing worker node:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coreos-installer &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ignition-url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.11.61:8080/okd/worker.ign /dev/sda &lt;span class=&quot;nt&quot;&gt;--insecure-ignition&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wait until all ignitions will be installed.&lt;/p&gt;

&lt;p&gt;Restart all nodes.&lt;/p&gt;

&lt;p&gt;And wait until Openshift will be installed. On my home lab installation continued more than 1,5 hour.&lt;/p&gt;

&lt;h3 id=&quot;bootstrap-installation&quot;&gt;Bootstrap installation&lt;/h3&gt;

&lt;p&gt;To monitor the bootstrap process Red Hat recommends to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ./openshift-install --dir &amp;lt;installation_directory&amp;gt; wait-for bootstrap-complete --log-level=info&lt;/code&gt; command. Unfortunatelly, in my case it does not work. Every time this commands ended with error. Although, configuration was correct and installation process continued. Moreover, I wanted to observe bootstap process in detail. Therefore, I run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;journalctl&lt;/code&gt; on the host (using ssh and with core user). For bootstrap node I typed following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@ocp-services ~]# ssh core@192.168.11.66
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;core@ocp-bootstrap ~]# &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@ocp-bootstrap ~]# journalctl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; release-image.service &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bootkube.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additionally, I regularly observed running containers as well:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@ocp-bootstrap ~]# crictl ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER           IMAGE                                                                                                                    CREATED              STATE               NAME                        ATTEMPT             POD ID
e6466af3587aa       quay.io/openshift-release-dev/ocp-release@sha256:bb1987fb718f81fb30bec4e0e1cd5772945269b77006576b02546cf84c77498e        About a minute ago   Running             cluster-version-operator    0                   811748d44e1d8
c24e9d6dbf475       d5d10803f3ebd3ef51495518565dedc1c8c3b722a016026c613fc22dba95ea90                                                         About a minute ago   Running             cloud-credential-operator   0                   b01a7b4cfc1ef
41c1b7d1ab749       28ea52b98c63aa5dd899d67bf267a3b7dd623f5a694b97a56793bb12597e2de9                                                         2 minutes ago        Running             machine-config-server       0                   40b5c46667d10
66e72fc96cd44       28ea52b98c63aa5dd899d67bf267a3b7dd623f5a694b97a56793bb12597e2de9                                                         2 minutes ago        Exited              machine-config-controller   0                   40b5c46667d10
58a422a9e4320       quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fd41b7237cac235fead9bda6dc9bf5c6cbde163ebf9d9249f33065d5ceadded0   4 minutes ago        Running             etcd                        0                   90ed4068c2c5d
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@ocp-bootstrap ~]# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wait for the end of bootstrap process.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;journalctl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; release-image.service &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bootkube.service
........
bootkube.service: Succeeded.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;master-node-installation&quot;&gt;Master node installation&lt;/h3&gt;

&lt;p&gt;During bootstrap node installation, I did restart master and worker nodes. This speeds up installation of master and worker nodes (I do not reason).&lt;/p&gt;

&lt;p&gt;To monitor master and working nodes I used journalctl too. Additionally, was checked the status of containers regulary:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;journalctl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;
crictl ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wait for master nodes installation to be deployed&lt;/p&gt;

&lt;p&gt;For checking if openshift is run and up, see the stats page of loadbalancer (in my case it is haproxy). There are all nodes should be green.&lt;/p&gt;

&lt;h3 id=&quot;worker-nodes&quot;&gt;Worker nodes&lt;/h3&gt;

&lt;p&gt;Before starting deploying worker node, shutdown bootstap node and deactivate it from loadbalancer.&lt;/p&gt;

&lt;p&gt;When master nodes are successfuly installed and in stats page all master nodes are green, the next step is signing csrs.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#check for pending certificates:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp-services ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc get csr 


&lt;span class=&quot;c&quot;&gt;#check and sing all pending certificates:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp-services ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc get csr &lt;span class=&quot;nt&quot;&gt;-ojson&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.items[] | select(.status == {} ) | .metadata.name'&lt;/span&gt; | xargs oc adm certificate approve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Before running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oc&lt;/code&gt; command do not forget to export KUBECONFIG variable in ocp-services machine.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;KUBECONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/try/install_dir/auth/kubeconfig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;During deployment of worker nodes, regularly check for new pending csr’s and sign new generated ones.&lt;/p&gt;

&lt;h3 id=&quot;final-result&quot;&gt;Final result&lt;/h3&gt;
&lt;p&gt;Finally, when all nodes are being deployed, check for url of openshift console:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#check for openshift console url&lt;/span&gt;
oc &lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--show-console&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Log in to Openshift using default kubeadmin user. Password is being generated during creation of manifests and ignition files. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/try/install_dir/auth/kubeadmin-password&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.openshift.com/container-platform/4.9/installing/installing_bare_metal/installing-restricted-networks-bare-metal.html&quot;&gt;Installing a user-provisioned bare metal cluster on a restricted network. Redhat documentation&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="openshift" /><summary type="html">In this post I tried to describe my experience that I had during Openshift 4.9 installation at my home lab. Redhat allows to use Openshift during 60 days for free without support.</summary></entry><entry><title type="html">Fixing “Cannot Install Windows 11” error during installation</title><link href="http://localhost:4000/site/windows11-requirements-error/" rel="alternate" type="text/html" title="Fixing “Cannot Install Windows 11” error during installation" /><published>2022-01-02T18:40:00+01:00</published><updated>2022-01-02T18:40:00+01:00</updated><id>http://localhost:4000/site/windows11-requirements-error</id><content type="html" xml:base="http://localhost:4000/site/windows11-requirements-error/">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;Today I tried to install Windows 11 on my virtual platform and during installation faced with the following problem:
&lt;img src=&quot;images/../../images/windows11-requirements-error/pic1.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;In this screen type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shift + F10&lt;/code&gt; at the same time to open a command promt. Then in command line type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;regedit&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the opened Registry Editor window, go to HKEY_LOCAL_MACHINE -&amp;gt; SYSTEM -&amp;gt; Setup.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic3.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Right click on Setup and then create a New -&amp;gt; Key. Give some name to created key. I named it “MyConfig”. &lt;strong&gt;!!!! Give “LabConfig” name. !!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic4.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click right button on the blank space of the window and choose: New -&amp;gt; DWORD (32-bit) Value.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic5.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rename created value to BypassTPMCheck. Thenk double-click on the on the created object and change Value date to 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic6.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Create more DWORDS values and give them following names: BypassCPUCheck, BypassRAMCheck and BypassSecureBootCheck. The value data of all created objects should be 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic7.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Close all opened windows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic8.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And click on “Install now” button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/../../images/windows11-requirements-error/pic9.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=sCLJYNI77Bk&quot;&gt;How to Fix Cannot Install Windows 11 on VMware Workstation&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="windows" /><summary type="html">Problem Today I tried to install Windows 11 on my virtual platform and during installation faced with the following problem:</summary></entry><entry><title type="html">Creating a systemctl application startup job</title><link href="http://localhost:4000/site/create-systemctl-service/" rel="alternate" type="text/html" title="Creating a systemctl application startup job" /><published>2021-12-15T07:15:00+01:00</published><updated>2021-12-15T07:15:00+01:00</updated><id>http://localhost:4000/site/create-systemctl-service</id><content type="html" xml:base="http://localhost:4000/site/create-systemctl-service/">&lt;p&gt;Here I have posted some information about how to create a simple service startup job for linux.&lt;/p&gt;

&lt;p&gt;Here below is shown a sample service file for systemctl&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Description &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;application
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;network.target

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;user&amp;gt;
&lt;span class=&quot;nv&quot;&gt;Group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;group&amp;gt;
&lt;span class=&quot;nv&quot;&gt;WorkingDirectory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;path where running file is located&amp;gt;
&lt;span class=&quot;nv&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;path with environment variable PATH &lt;span class=&quot;s2&quot;&gt;&quot;PATH=/location&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;EnvironmentFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;path to environment file&amp;gt;
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;a &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;with necessary parameters to start application&amp;gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A service file should be located under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system&lt;/code&gt; folder. A service file can be named anyhow, but extension of the file should be ended with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.service&lt;/code&gt;. For instance: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/testapp.service&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When file is being created reload daemon:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And start application:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start testapp.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If application has to be started automatically, do not do not forget to enable it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;testapp.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="linux" /><summary type="html">Here I have posted some information about how to create a simple service startup job for linux.</summary></entry><entry><title type="html">A short help for regular expressions</title><link href="http://localhost:4000/site/regex-help/" rel="alternate" type="text/html" title="A short help for regular expressions" /><published>2021-12-08T16:30:00+01:00</published><updated>2021-12-08T16:30:00+01:00</updated><id>http://localhost:4000/site/regex-help</id><content type="html" xml:base="http://localhost:4000/site/regex-help/">&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#mostly-used-regex-paterns&quot;&gt;Mostly used regex paterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#other-patterns&quot;&gt;Other patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#examples&quot;&gt;Examples:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#source&quot;&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mostly-used-regex-paterns&quot;&gt;Mostly used regex paterns&lt;/h2&gt;

&lt;table class=&quot;table table-bordered table-hover table-condensed&quot;&gt;
 
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Token&lt;/th&gt;
      &lt;th&gt;Explanation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[abcd]&lt;/td&gt;
      &lt;td&gt;a single character of a/b/c or d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[^abcd]&lt;/td&gt;
      &lt;td&gt;any character except a/b/c or d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[a-z]&lt;/td&gt;
      &lt;td&gt;matches any characters between a to z&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[a-zA-Z]&lt;/td&gt;
      &lt;td&gt;matches any characters between a to z and A to Z&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[^a-p]&lt;/td&gt;
      &lt;td&gt;matches any characters that are not in range between a to p&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt;any single character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a|b&lt;/td&gt;
      &lt;td&gt;sing of alternate. either &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\s&lt;/td&gt;
      &lt;td&gt;any whitespace character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\S&lt;/td&gt;
      &lt;td&gt;any non-whitespace character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\d&lt;/td&gt;
      &lt;td&gt;any digit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\D&lt;/td&gt;
      &lt;td&gt;any non-digit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\w&lt;/td&gt;
      &lt;td&gt;any word charater&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\W&lt;/td&gt;
      &lt;td&gt;any non-word charater&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(?:…)&lt;/td&gt;
      &lt;td&gt;Match everything enclosed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(…)&lt;/td&gt;
      &lt;td&gt;Capture everything enclosed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a?&lt;/td&gt;
      &lt;td&gt;a or zero&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a*&lt;/td&gt;
      &lt;td&gt;more of a or a zero&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a+&lt;/td&gt;
      &lt;td&gt;one or more of a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a{3}&lt;/td&gt;
      &lt;td&gt;3 of a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[0..9]{3}&lt;/td&gt;
      &lt;td&gt;any 3 digits in sequence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[0..9]{3,5}&lt;/td&gt;
      &lt;td&gt;from 3 to 5 digits in sequence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a{3,}&lt;/td&gt;
      &lt;td&gt;3 and more of a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a{3,6}&lt;/td&gt;
      &lt;td&gt;between 3 and 6 of a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[0..9]+&lt;/td&gt;
      &lt;td&gt;from 1 to infinity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[0..9]{1,}&lt;/td&gt;
      &lt;td&gt;from 1 to infinity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[0..9]*&lt;/td&gt;
      &lt;td&gt;from 0 to infinity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[0..9]{0,}&lt;/td&gt;
      &lt;td&gt;from 0 to infinity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt;Start of string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;/td&gt;
      &lt;td&gt;End of string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\n&lt;/td&gt;
      &lt;td&gt;New line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\r&lt;/td&gt;
      &lt;td&gt;Return sign&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\t&lt;/td&gt;
      &lt;td&gt;Tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\0&lt;/td&gt;
      &lt;td&gt;Null character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;()&lt;/td&gt;
      &lt;td&gt;Grouping&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;other-patterns&quot;&gt;Other patterns&lt;/h2&gt;

&lt;table class=&quot;table table-bordered table-hover table-condensed&quot;&gt;
 
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Token&lt;/th&gt;
      &lt;th&gt;Explanation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;\v&lt;/td&gt;
      &lt;td&gt;Vertical whitespace character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;#&lt;/td&gt;
      &lt;td&gt;Match subpattern number #&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\xYY&lt;/td&gt;
      &lt;td&gt;Hex character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\ddd&lt;/td&gt;
      &lt;td&gt;oktal character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[\b]&lt;/td&gt;
      &lt;td&gt;backspace character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\A&lt;/td&gt;
      &lt;td&gt;Start of string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\Z&lt;/td&gt;
      &lt;td&gt;End of string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\b&lt;/td&gt;
      &lt;td&gt;A word boundary. (Neither starts or ends with a specific letter.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;\B&lt;/td&gt;
      &lt;td&gt;Non-word boundary&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples:&lt;/h2&gt;

&lt;p&gt;This statement searches in text for the words more than 5 letters and following 2 digits:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\s\w{5,}\s+\d{2}\s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here a regex command searches for the all last words in the sentences.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\W+\w{1,}(?:\.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A regex that identifies all urls in the text:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http|https://&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;a-zA-z0-9.-_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;com|net&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;source&quot;&gt;Source&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://regex101.com/&quot;&gt;https://regex101.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8sv-6AN0_cg&quot;&gt;https://www.youtube.com/watch?v=8sv-6AN0_cg&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="regex" /><summary type="html">Mostly used regex paterns Other patterns Examples: Source</summary></entry><entry><title type="html">Deploy a python application using podman. Deploy rootless container and connect podmanized database container</title><link href="http://localhost:4000/site/deploy-application-on-podman/" rel="alternate" type="text/html" title="Deploy a python application using podman. Deploy rootless container and connect podmanized database container" /><published>2021-11-28T19:30:00+01:00</published><updated>2021-11-28T19:30:00+01:00</updated><id>http://localhost:4000/site/deploy-application-on-podman</id><content type="html" xml:base="http://localhost:4000/site/deploy-application-on-podman/">&lt;p&gt;In order to connect a rootless application container to the rootles database container I used port mapping technique. The following steps were used for successfully applying application with connection to database.&lt;/p&gt;

&lt;p&gt;First of all I installed libvirt package in order to enable virtualization network interface:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@podman ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libvirt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Deploy database container. I mapped the database port 3306 from the container to the port 33306 at host machine.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;podman run -d --name mysql-db -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=words -e MYSQL_ROOT_PASSWORD=mysql -p 33306:3306 -v /opt/homelab_projects/mysql_db_dir_noroot:/var/lib/mysql/data rhscl/mysql-57-rhel7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out ip address of the podman interface at the host.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@workstation homelab_projects]$ ip addr
...........
5: virbr0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000
    link/ether 52:54:00:dc:2d:dc brd ff:ff:ff:ff:ff:ff
    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0
       valid_lft forever preferred_lft forever
............
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And finally, deploy application using parameters for mapping port and setting environment variables. In order to access to database container, I need to set a gateway ip address of podman network as database host. In this way all all traffic between application and database containers will run through main host. Of course, in this case, do not forget to map the port of mysql container and set it as env value for application container.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@workstation homelab_projects]$ podman run -d --name testapp -p 8090:8090 -e MYSQL_HOST=192.168.122.1 -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_PORT=33306 -e MYSQL_DB=words testapp
4bb1627cfa1c1c0690cebfd011e340162ead9f50143bde5269e90f24bbe10f83
[admin@workstation homelab_projects]$ podman ps -a
CONTAINER ID  IMAGE                                                                                                      COMMAND               CREATED        STATUS            PORTS                    NAMES
4bb1627cfa1c  localhost/testapp:latest                                                                                   nohup python /opt...  3 seconds ago  Up 3 seconds ago  0.0.0.0:8090-&amp;gt;8090/tcp   testapp
0fb7b0ad8de7  registry.access.redhat.com/rhscl/mysql-57-rhel7:latest                                                     run-mysqld            2 hours ago    Up 2 hours ago    0.0.0.0:33306-&amp;gt;3306/tcp  mysql-db
[admin@workstation homelab_projects]$ 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additionally, I would give a short command for entering to the container:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;podman &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; testapp bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="podman" /><category term="python" /><summary type="html">In order to connect a rootless application container to the rootles database container I used port mapping technique. The following steps were used for successfully applying application with connection to database.</summary></entry><entry><title type="html">Deploy MySQL and PostgreSQL database systems on Podman with regular (non-root) user</title><link href="http://localhost:4000/site/running-database-on-podman/" rel="alternate" type="text/html" title="Deploy MySQL and PostgreSQL database systems on Podman with regular (non-root) user" /><published>2021-11-28T16:30:00+01:00</published><updated>2021-11-28T16:30:00+01:00</updated><id>http://localhost:4000/site/running-database-on-podman</id><content type="html" xml:base="http://localhost:4000/site/running-database-on-podman/">&lt;h2 id=&quot;mysql&quot;&gt;MySQL&lt;/h2&gt;
&lt;p&gt;Install mysql client:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum install mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create a folder on the local host for storing databases and configure SELinux option:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir /opt/homelab_projects/mysql_db_dir_noroot

[admin@workstation homelab_projects]$ sudo semanage fcontext -a -t container_file_t '/opt/homelab_projects/mysql_db_dir_noroot(/*)'
[admin@workstation homelab_projects]$ restorecon -v 'mysql_db_dir_noroot'
[admin@workstation homelab_projects]$ ll -Z 
total 56
.........
drwxrwxr-x.  2 admin admin unconfined_u:object_r:container_file_t:s0  4096 Nov 28 17:30 mysql_db_dir_noroot
...........
[admin@workstation homelab_projects]$ 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run mysql container. Here I set additionally environment variables, port mapping and folders for sharing database :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@workstation homelab_projects]$ podman run -d --name mysql-db -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=words -e MYSQL_ROOT_PASSWORD=mysql -p 33306:3306 -v /opt/homelab_projects/mysql_db_dir_noroot:/var/lib/mysql/data rhscl/mysql-57-rhel7
0fb7b0ad8de7f00acccf7ddd3ccd296836da24ef575727e99bc63a2c0cdbe11e
[admin@workstation homelab_projects]$ 
[admin@workstation homelab_projects]$ 
[admin@workstation homelab_projects]$ podman ps -a
CONTAINER ID  IMAGE                                                                                                      COMMAND         CREATED        STATUS            PORTS                    NAMES
0fb7b0ad8de7  registry.access.redhat.com/rhscl/mysql-57-rhel7:latest                                                     run-mysqld      5 seconds ago  Up 4 seconds ago  0.0.0.0:33306-&amp;gt;3306/tcp  mysql-db
.........
[admin@workstation homelab_projects]$ 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s check if the database has been created:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@workstation homelab_projects]$ mysql -h 127.0.0.1 -uadmin -pmysql -P 33306
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.24 MySQL Community Server (GPL)

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MySQL [(none)]&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| words              |
+--------------------+
2 rows in set (0.001 sec)

MySQL [(none)]&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Deploy dump of the db:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@workstation homelab_projects]$ mysql -h 127.0.0.1 -uadmin -pmysql -P 33306 words &amp;lt; db.sql 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;postgresql&quot;&gt;PostgreSQL&lt;/h2&gt;
&lt;p&gt;Installation of rootless PosgreSQL on Podman is quite similar with MySQL. Here below I going to describe it in nutshell with most important commands.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Firstly I have created a local folder which will be mounted to container as volume. Here will be stored the database and all system files of the postgresql. Additionally, it is necessary to set required selinux file-context for the folder:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@workstation opt]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pv&lt;/span&gt; /opt/podman/postgresql13
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt;: created directory &lt;span class=&quot;s1&quot;&gt;'/opt/podman'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt;: created directory &lt;span class=&quot;s1&quot;&gt;'/opt/podman/postgresql13'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@workstation opt]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;semanage fcontext &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; container_file_t &lt;span class=&quot;s2&quot;&gt;&quot;/opt/podman/postgresql13(/.*)?&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;admin: 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@workstation opt]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@workstation opt]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;restorecon &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; podman/postgresql13
Relabeled /opt/podman/postgresql13 from unconfined_u:object_r:usr_t:s0 to unconfined_u:object_r:container_file_t:s0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@workstation opt]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Plan which local port will be used. You can left a default postgres port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5432&lt;/code&gt;, but I decided to use another port - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;54321&lt;/code&gt;. Therefore, we need to define the new port in Selinux.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Check what is the name of SELinux port type and if the port already defined:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;seymur@workstation ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;semanage port &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;postgres
postgresql_port_t              tcp      5432, 9898
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;seymur@workstation ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Define custom port in Selinux:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;semanage port &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; postgresql_port_t &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; tcp 54321
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Next, deploy Posgresql with the required parameters:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;seymur@workstation ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; postgresql_database &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pass &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;db &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 54321:5432 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /opt/podman/postgresql13:/var/lib/pgsql/data registry.fedoraproject.org/f33/postgresql
732837a2fbe88033a26760c25c06cfc80d823578a57e227083820604c6a4b186
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;seymur@workstation ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POSTGRESQL_USER=user&lt;/code&gt; - is a database user, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POSTGRESQL_PASSWORD=pass&lt;/code&gt; - password for user, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POSTGRESQL_DATABASE=db&lt;/code&gt; - name of database. Parameter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v /opt/podman/postgresql13:/var/lib/pgsql/data&lt;/code&gt; mounts local folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/podman/postgresql13&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/lib/pgsql/data&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check application runs:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;seymur@workstation ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;podman ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID    IMAGE                                          COMMAND               CREATED       STATUS                   PORTS                    NAMES
732837a2fbe8    registry.fedoraproject.org/f33/postgresql      run-postgresql        2 hours ago   Up 2 hours ago           0.0.0.0:54321-&amp;gt;5432/tcp  postgresql_database
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="podman" /><category term="database" /><summary type="html">MySQL Install mysql client:</summary></entry><entry><title type="html">Basic user management in Openshift</title><link href="http://localhost:4000/site/create-openshift-oauth-users/" rel="alternate" type="text/html" title="Basic user management in Openshift" /><published>2021-11-19T18:30:00+01:00</published><updated>2021-11-19T18:30:00+01:00</updated><id>http://localhost:4000/site/create-openshift-oauth-users</id><content type="html" xml:base="http://localhost:4000/site/create-openshift-oauth-users/">&lt;p&gt;In this post I shortly describe how to create users for Openshift using HTPasswd provider. More about authentication providers are able to find in &lt;a href=&quot;https://docs.openshift.com/container-platform/4.9/authentication/understanding-authentication.html&quot;&gt;official documentation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;kubeadmin-user&quot;&gt;kubeadmin user&lt;/h2&gt;

&lt;p&gt;During installation Openshift creates default &lt;em&gt;kubeadmin&lt;/em&gt; with a automatically generated password. Password you can find in installation folder: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;installation_folder&amp;gt;/auth/kubeadmin-password&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ cat install_dir/auth/kubeadmin-password 
bVM5i-CxeZI-NDvoS-d9wtV[admin@ocp4 try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;kubeconfig&lt;/em&gt; locates in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;installation_folder&amp;gt;/auth/&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc --kubeconfig install_dir/auth/kubeconfig get node
NAME                                 STATUS     ROLES    AGE   VERSION
etcd-2.okd4.home.lab                 Ready      master   35d   v1.20.0+558d959-1089
etcd-3.okd4.home.lab                 Ready      master   28d   v1.20.0+558d959-1089
okd4-compute-1.okd4.home.lab         Ready      worker   35d   v1.20.0+558d959-1089
okd4-control-plane-1.okd4.home.lab   Ready      master   35d   v1.20.0+558d959-1089
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can set kubeconfig to KUBECONFIG environment variable:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export KUBECONFIG=/opt/install_dir/auth/kubeconfig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;oauth-and-identity-providers&quot;&gt;OAuth and identity providers&lt;/h2&gt;

&lt;p&gt;Authentication in Openshift is supported by Authentication Operator which runs on OAuth server. Users attempt to authenticate to the Opeshift API using using OAuth access tokens.&lt;/p&gt;

&lt;p&gt;In order to use OAuth server it should be enabled and configured as well. Using kubeadmin user I specifed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTPasswd&lt;/code&gt; identity provider. Generally, the following list of identity providers are able to configure and use in Openshift: HTPasswd, Keystone, LDAP, Basic authentication, Request header, GitHub or GitHub Enterprise, GitLab, Google, OpenID Connect. More in detail about each of the provider is given in &lt;a href=&quot;https://docs.openshift.com/container-platform/4.7/authentication/understanding-identity-provider.html&quot;&gt;Openhift Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuring-htpasswd-identity-provider&quot;&gt;Configuring HTPasswd identity provider&lt;/h2&gt;

&lt;h3 id=&quot;creating-htpasswd-file&quot;&gt;Creating htpasswd file&lt;/h3&gt;

&lt;p&gt;Basic format for creating HTPasswd authentitation file looks like this: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;htpasswd -c -b -B &amp;lt;filename&amp;gt; &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;&lt;/code&gt;. Here &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt; parameter creates file, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-b&lt;/code&gt; uses a password which is given in command from the command line. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-B&lt;/code&gt; - Force bcrypt encryption of the password&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ htpasswd -c -b -B my_ocp_users admin admin
Adding password for user admin
[admin@ocp4 try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check content of the created file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ cat my_ocp_users 
admin:$2y$05$XteSEzWTBX8HlzqHQv2ryecUY5On/7DBfTSnCjWfyCFlDhaDdufcq
[admin@ocp4 try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create another user. Do not use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt; parameter. In this case you create a file again with the new content.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ htpasswd -b -B my_ocp_users developer developer
Adding password for user developer
[admin@ocp4 try]$ cat my_ocp_users 
admin:$2y$05$XteSEzWTBX8HlzqHQv2ryecUY5On/7DBfTSnCjWfyCFlDhaDdufcq
developer:$2y$05$Ab1TxMQV0T7te6NmKXaALOX/6XsFHsV06LYcaZHwIdIDpkJiObN2m
[admin@ocp4 try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;apply-htpasswd-file&quot;&gt;Apply htpasswd file&lt;/h3&gt;

&lt;p&gt;In order to apply a httpasswd file for Openshift, first of should be created a secret in openshift-config namespace. In the following command I described how I did. Here, it is important to define &lt;em&gt;htpasswd&lt;/em&gt; as a type of appling secret.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc create secret generic myusers --from-file htpasswd=my_ocp_users -n openshift-config
secret/localusers created
[admin@ocp4 try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Checking out created secret:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc get secrets -n openshift-config
NAME                      TYPE                     DATA   AGE
......
myusers                   Opaque                   1      27s
.......
[admin@ocp4 try]$ 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On next step I modified OAuth custom resource. It was able to create a new file and apply it using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oc create -f &amp;lt;resource_file&amp;gt;.yml&lt;/code&gt; as it shown in openshift documentation. But I prefer to export the existing oauth custom resource, modify &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spec&lt;/code&gt; section and apply the modified one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc get oauth cluster -o yaml &amp;gt; oauth_modify.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Edit exported file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ vim oauth_modify.yml 
apiVersion: config.openshift.io/v1
kind: OAuth
.........
spec:
  identityProviders:
  - htpasswd:
      fileData:
        name: myusers
    mappingMethod: claim
    name: myusers
    type: HTPasswd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Apply new oauth file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc replace -f oauth_modify.yml 
oauth.config.openshift.io/cluster replaced
[admin@ocp4 try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And check if pods of openshift-authentication namespaces are being recreated:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc get pods -n openshift-authentication
NAME                               READY   STATUS        RESTARTS   AGE
oauth-openshift-647d98d4db-pmtx6   0/1     Terminating   0          26d
oauth-openshift-777bfcd76c-v2xzl   1/1     Running       0          49s
oauth-openshift-777bfcd76c-wpqsq   1/1     Running       0          41s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the pods are not being recreated, remove them. In this case, Openshift will re-deploy new pods with the updated configuration.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 htpasswd]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc delete pods &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; openshift-authentication &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt;
warning: Immediate deletion does not &lt;span class=&quot;nb&quot;&gt;wait &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;confirmation that the running resource has been terminated. The resource may &lt;span class=&quot;k&quot;&gt;continue &lt;/span&gt;to run on the cluster indefinitely.
pod &lt;span class=&quot;s2&quot;&gt;&quot;oauth-openshift-7f55497fcd-s56qd&quot;&lt;/span&gt; force deleted
pod &lt;span class=&quot;s2&quot;&gt;&quot;oauth-openshift-7f55497fcd-z7d9c&quot;&lt;/span&gt; force deleted
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 htpasswd]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc get pods &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; openshift-authentication
NAME                               READY   STATUS              RESTARTS   AGE
oauth-openshift-7f55497fcd-9v4zl   0/1     ContainerCreating   0          3s
oauth-openshift-7f55497fcd-h7x8m   0/1     ContainerCreating   0          3s
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 htpasswd]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc get pods &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; openshift-authentication
NAME                               READY   STATUS    RESTARTS   AGE
oauth-openshift-5c6444d496-hj52l   1/1     Running   0          9m35s
oauth-openshift-5c6444d496-hvf2m   1/1     Running   0          9m31s
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 htpasswd]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;assigning-privileges&quot;&gt;Assigning privileges&lt;/h2&gt;

&lt;p&gt;Here I shortly show how has been assigned &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cluster-admin&lt;/code&gt; role to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt; user. For admin user I want to give full access to the openshift cluster. Therefore, it should applied &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cluster-admin&lt;/code&gt; role. Developer user will be granted to create new projects.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 try]$ oc adm policy add-cluster-role-to-user cluster-admin admin
Warning: User 'admin' not found
clusterrole.rbac.authorization.k8s.io/cluster-admin added: &quot;admin&quot;
[admin@ocp4 try]$ 
[admin@ocp4 ~]$ oc login -u admin -p admin oauth-openshift.okd4.home.lab:6443
Login successful.

You have access to 63 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project &quot;default&quot;.
[admin@ocp4 ~]$ 
[admin@ocp4 ~]$ oc whoami 
admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remove-project-creation-privileges&quot;&gt;Remove project creation privileges&lt;/h2&gt;

&lt;p&gt;One of important points of user managment is vemove project creation privileges from all users by default. By default, this option is active for all users.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 ~]$ oc get clusterrolebinding | grep self-prov
self-provisioners                        ClusterRole/self-provisioner             36d
[admin@ocp4 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Describe a self-provisioners rolebinding. Check out the name of the cluster role and group to which it was assgned by default.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 ~]$ oc describe clusterrolebinding self-provisioners
Name:         self-provisioners
Labels:       &amp;lt;none&amp;gt;
Annotations:  rbac.authorization.kubernetes.io/autoupdate: true
Role:
  Kind:  ClusterRole
  Name:  self-provisioner
Subjects:
  Kind   Name                        Namespace
  ----   ----                        ---------
  Group  system:authenticated:oauth  
[admin@ocp4 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self-provisioner&lt;/code&gt; role from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;system:authenticated:oauth&lt;/code&gt; group&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc adm policy remove-cluster-role-from-group self-provisioner system:authenticated:oauth
Warning: Your changes may get lost whenever a master is restarted, unless you prevent reconciliation of this rolebinding using the following &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;: 
oc annotate clusterrolebinding.rbac self-provisioners &lt;span class=&quot;s1&quot;&gt;'rbac.authorization.kubernetes.io/autoupdate=false'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--overwrite&lt;/span&gt;
clusterrole.rbac.authorization.k8s.io/self-provisioner removed: &lt;span class=&quot;s2&quot;&gt;&quot;system:authenticated:oauth&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thus will be removed self-provisioners rolebinding and will be disabled priviledge to create projects for all users.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;oc get clusterrolebinding | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;self-prov
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;admin@ocp4 ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And granting self-provisioner cluster role to developer user.&lt;/p&gt;

&lt;p&gt;Created a group for developer user and add the user into the group&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 ~]$ oc adm groups new developers
group.user.openshift.io/developers created
[admin@ocp4 ~]$ 
[admin@ocp4 ~]$ oc adm groups add-users developers developer
group.user.openshift.io/developers added: &quot;developer&quot;
[admin@ocp4 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assigned self-provisioner role to developers group:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 ~]$ oc adm policy add-cluster-role-to-user --rolebinding-name self-provisioning-admin self-provisioner admin
clusterrole.rbac.authorization.k8s.io/self-provisioner added: &quot;admin&quot;
[admin@ocp4 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Verified result:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@ocp4 ~]$ oc login -u developer -p developer
Login successful.

You have one project on this server: &quot;default&quot;

Using project &quot;default&quot;.
[admin@ocp4 ~]$ oc new-project test
Now using project &quot;test&quot; on server &quot;https://localhost:6443&quot;.

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=k8s.gcr.io/serve_hostname

[admin@ocp4 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="openshift" /><summary type="html">In this post I shortly describe how to create users for Openshift using HTPasswd provider. More about authentication providers are able to find in official documentation</summary></entry><entry><title type="html">Create persistance storage for openshift</title><link href="http://localhost:4000/site/create-persistence-storage-for-openshift/" rel="alternate" type="text/html" title="Create persistance storage for openshift" /><published>2021-11-17T16:30:00+01:00</published><updated>2021-11-17T16:30:00+01:00</updated><id>http://localhost:4000/site/create-persistence-storage-for-openshift</id><content type="html" xml:base="http://localhost:4000/site/create-persistence-storage-for-openshift/">&lt;h3 id=&quot;set-ip-nfs-server-and-export-a-created-share&quot;&gt;Set ip NFS Server and export a created share.&lt;/h3&gt;

&lt;p&gt;A simple process of creating NFS is described on this site. Please, use search function.&lt;/p&gt;

&lt;h3 id=&quot;set-up-persistent-volume&quot;&gt;Set up persistent volume&lt;/h3&gt;
&lt;p&gt;Firstly, I created a setup_pv.yaml file with following content:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim setup_pv.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: test-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /opt/okdn_share/test
    server: 192.168.11.61
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;According to the yaml file I used share from the host 192.168.11.61, path &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/okdn_share/test&lt;/code&gt;. Name of the storage will be test-pv.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showmount -e 192.168.11.61&lt;/code&gt; command prints list of available shares that available on the host.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When yaml file is created, create apply it using oc command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;oc create -f setup_pv.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And finally, check if a persistence volume is created:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[admin@dns try]$ oc get pv
NAME      CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE
test-pv   10Gi       RWX            Retain           Available                                   22h
[admin@dns try]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;&quot;&quot;, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil}</name></author><category term="openshift" /><summary type="html">Set ip NFS Server and export a created share.</summary></entry></feed>